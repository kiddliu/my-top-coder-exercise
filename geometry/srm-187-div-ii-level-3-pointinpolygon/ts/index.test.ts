import PointInPolygon from "./index";

describe('PointInPolygon', () => {
    const pip = new PointInPolygon();
    
    test('should pass case 1', () => {
        expect(pip.testPoint(["0 0", "0 10", "10 10", "10 0"], 5, 5)).toBe("INTERIOR");
    });
    
    test('should pass case 2', () => {
        expect(pip.testPoint(["0 0", "0 10", "10 10", "10 0"], 10, 15)).toBe("EXTERIOR");
    });

    test('should pass case 3', () => {
        expect(pip.testPoint(["0 0", "0 10", "10 10", "10 0"], 5, 10)).toBe("BOUNDARY");
    });

    test('should pass case 4', () => {
        expect(pip.testPoint(["-100 -90", "-100 100","100 100", "100 -100", "-120 -100","-120 100","-130 100","-130 -110", "110 -110", "110 110", "-110 110","-110 -90"], 0, 0)).toBe("EXTERIOR");
    });

    test('should pass case 5', () => {
        expect(pip.testPoint(["0 0","0 1000","1000 1000","1000 800", "200 800","200 600","600 600","600 400", "200 400","200 200","1000 200","1000 0"], 100, 500)).toBe("INTERIOR");
    });

    test('should pass case 6', () => {
        expect(pip.testPoint(["0 1000","1000 1000","1000 800", "200 800","200 600","600 600","600 400", "200 400","200 200","1000 200","1000 0","0 0"], 322, 333)).toBe("EXTERIOR");
    });

    test('should pass case 7', () => {
        expect(pip.testPoint(["500 0","500 100","400 100","400 200","300 200", "300 300","200 300","200 400","100 400","100 500", "0 500","0 400","-100 400","-100 300","-200 300", "-200 200","-300 200","-300 100","-400 100","-400 0", "-500 0","-500 -100","-400 -100","-400 -200","-300 -200", "-300 -300","-200 -300","-200 -400","-100 -400","-100 -500", "0 -500","0 -400","100 -400","100 -300","200 -300", "200 -200","300 -200","300 -100","400 -100","400 0"], 200, 200)).toBe("INTERIOR");
    });

    test('should pass case 8', () => {
        expect(pip.testPoint(["1 0","2 0","2 1","3 1","3 0","4 0","4 -1","5 -1","5 0", "6 0","6 2","0 2","0 3","-1 3","-1 4","0 4","0 6","1 6", "1 7","0 7","0 8","-2 8","-2 2","-8 2","-8 0","-7 0", "-7 -1","-6 -1","-6 0","-4 0","-4 1","-3 1","-3 0", "-2 0","-2 -6","0 -6","0 -5","1 -5","1 -4","0 -4", "0 -3","-1 -3","-1 -2","0 -2","0 -1","1 -1"], 0, 0)).toBe("INTERIOR");
    });
});